##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3.5'

services:

    # ----------------------------------------
    # COUCHPOTATO
    # ----------------------------------------
    couchpotato:
        image: linuxserver/couchpotato
        container_name: couchpotato
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:5050:5050'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './couchpotato:/config'
            - '${DLDIR}/completed:/downloads'
            - '${MOVIEDIR}:/movies'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # TRANSMISSION-OPENVPN
    # ----------------------------------------
    transmission-openvpn:
        image: haugene/transmission-openvpn
        container_name: transmission-openvpn
        network_mode: "bridge"
        cap_add:
            - NET_ADMIN
        devices:
            - "/dev/net/tun"
        restart: unless-stopped
        ports:
            - "9091:9091"
            - "8888:8888"
        dns:
            - 1.1.1.1
            - 1.0.0.1
        volumes:
            - /etc/localtime:/etc/localtime:ro
            - './tvpn:/data'
            - '${DLDIR}:/downloads'
        environment:
            - OPENVPN_PROVIDER=PIA
            - OPENVPN_USERNAME=${PIAUNAME}
            - OPENVPN_PASSWORD=${PIAPASS}
            - OPENVPN_OPTS=${PIASERV}
            - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
            - GLOBAL_APPLY_PERMISSIONS=true
            - TRANSMISSION_WEB_UI=${TWEBUI}
            - WEBPROXY_ENABLED=true
            - WEBPROXY_PORT=8888
            - PUID=${PUID}
            - PGID=${PGID}
            - LOCAL_NETWORK=${CIDR_ADDRESS}
            - TRANSMISSION_DOWNLOAD_DIR=${DLDIR}/completed
            - TRANSMISSION_INCOMPLETE_DIR=${DLDIR}/incomplete
            - TRANSMISSION_SPEED_LIMIT_DOWN=${TDNSPEED}
            - TRANSMISSION_SPEED_LIMIT_DOWN_ENABLED=${TDLIMIT}
            - TRANSMISSION_SPEED_LIMIT_UP=${TUPSPEED}
            - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=${TULIMIT}
            - TRANSMISSION_QUEUE_STALLED_ENABLED=true
            - TRANSMISSION_QUEUE_STALLED_MINUTES=30
            - TRANSMISSION_RATIO_LIMIT=${TSHARER}
            - TRANSMISSION_RATIO_LIMIT_ENABLED=${TRATIOL}
            - TRANSMISSION_IDLE_SEEDING_LIMIT_ENABLED=${TSHAREL}
            - TRANSMISSION_IDLE_SEEDING_LIMIT=${TSHARET}
            - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=true
            - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=${TDQUEUE}
            - TRANSMISSION_PEER_LIMIT_GLOBAL=${TGPEERS}
            - TRANSMISSION_PEER_LIMIT_PER_TORRENT=${TTPEERS}
            - TRANSMISSION_UMASK=0
            - TRANSMISSION_UTP_ENABLED=${TUTP}
            - TRANSMISSION_PEX_ENABLED=${TPEX}
            - TRANSMISSION_DHT_ENABLED=${TDHT}
            - TRANSMISSION_LPD_ENABLED=${TLPD}
            - TRANSMISSION_SEED_QUEUE_ENABLED=true
            - TRANSMISSION_SEED_QUEUE_SIZE=${TUQUEUE}
            - TRANSMISSION_BLOCKLIST_ENABLED=${TBLIST}
            - TRANSMISSION_BLOCKLIST_URL=${TBLISTURL}
            - TRANSMISSION_RPC_AUTHENTICATION_REQUIRED=${TAUTH}
            - TRANSMISSION_RPC_USERNAME=${TUSER}
            - TRANSMISSION_RPC_PASSWORD=${TPASS}
            - TRANSMISSION_UPLOAD_SLOTS_PER_TORRENT=14
            - TRANSMISSION_PREFETCH_ENABLED=1
            - TRANSMISSION_PREALLOCATION=1

    # ----------------------------------------
    # DUPLICATI
    # ----------------------------------------
    duplicati:
        image: linuxserver/duplicati
        container_name: duplicati
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8200:8200'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './duplicati:/config'
            - './duplicati/backups:/backups'
            - '${PWD}:/source'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # HEADPHONES
    # ----------------------------------------
    headphones:
        image: linuxserver/headphones
        container_name: headphones
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8282:8181'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './headphones:/config'
            - '${DLDIR}/completed:/downloads'
            - '${MUSICDIR}:/music'

    # ----------------------------------------
    # JACKETT
    # ----------------------------------------
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9117:9117'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './jackett:/config'
            - '${DLDIR}/completed:/downloads'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # JELLYFIN
    # ----------------------------------------
    jellyfin:
        image: jellyfin/jellyfin
        container_name: jellyfin
        restart: unless-stopped
        network_mode: "host"
        user: "${PUID}:${PGID}"
        ports:
            - '${IP_ADDRESS}:8096:8096'
        volumes:
            - './jellyfin:/config'
            - '${TVDIR}:/media/tv'
            - '${MOVIEDIR}:/media/movies'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # LIDARR
    # ----------------------------------------
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8686:8686'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './lidarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${MUSICDIR}:/music'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # MINIO
    # ----------------------------------------
    minio:
        image: minio/minio
        container_name: minio
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9009:9000'
        environment:
            - MINIO_ACCESS_KEY=minio
            - MINIO_SECRET_KEY=minio123
        volumes:
            - './minio:/root/.minio'
            - '${PWD}:/export'
        command: server /export

    # ----------------------------------------
    # MUXIMUX
    # ----------------------------------------
    muximux:
        image: linuxserver/muximux
        container_name: muximux
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:80:80'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # NETDATA
    # ----------------------------------------
    netdata:
        image: netdata/netdata:latest
        container_name: netdata
        hostname: '${HOSTNAME}'
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:19999:19999'
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined    
        environment:
            - PGID=${DOCKERGRP}
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/var/run/docker.sock:/var/run/docker.sock:rw'

    # ----------------------------------------
    # NZBGet
    # ----------------------------------------
    nzbget:
        image: linuxserver/nzbget
        container_name: nzbget
        restart: unless-stopped
        environment:
          - PUID=${PUID}
          - PGID=${PGID}
          - TZ=${TZ}
        network_mode: 'bridge'
        ports:
          - '${IP_ADDRESS}:6789:6789'
        volumes:
          - './nzbget:/config'
          - '${DLDIR}:/downloads'

    # ----------------------------------------
    # OMBI
    # ----------------------------------------
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:3579:3579'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './ombi:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # OUROBOROS
    # ----------------------------------------
    ouroboros:
        image: pyouroboros/ouroboros
        container_name: ouroboros
        restart: unless-stopped
        network_mode: "bridge"
        hostname: '${HOSTNAME}'
        environment:
            - CLEANUP=true
            - CRON="0 */6 * * *"
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - TZ=${TZ}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'

    # ----------------------------------------
    # PLEX
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        network_mode: "host"
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
            - './plex:/config'
            - './plex/transcode:/transcode'
            - '${TVDIR}:/data/tvshows'
            - '${MOVIEDIR}:/data/movies'
            - '${MUSICDIR}:/data/music'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # PORTAINER
    # ----------------------------------------
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9000:9000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        command: ${PORTAINERSTYLE} -H unix:///var/run/docker.sock

    # ----------------------------------------
    # RADARR
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${MOVIEDIR}:/movies'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # SICKCHILL
    # ----------------------------------------
    sickchill:
        image: linuxserver/sickchill
        container_name: sickchill
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8081:8081'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './sickchill:/config'
            - '${DLDIR}/completed:/downloads'
            - '${TVDIR}:/tv'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # SONARR
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './sonarr:/config'
            - '${DLDIR}/completed:/data/completed'
            - '${TVDIR}:/tv'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # TAUTULLI
    # ----------------------------------------
    tautulli:
        image: tautulli/tautulli
        container_name: tautulli
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8181:8181'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './tautulli:/config'
            - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
        depends_on:
            - plex
